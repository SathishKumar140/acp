
1. Which agile methodology has as one of its core principles the concept of osmotic communication?
A. Scrum
B. FDD
C. Crystal
D. XP
Answer: C  
Explanation: A core principle of the Crystal methodology is osmotic communication. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Communications]

2. What should a scrum master do if he or she notices disruptive behavior during a scrum?
A. Abruptly cancel the meeting.
B. Let the team, as self-organizing, resolve the issue.
C. Ignore the disruptive discussion knowing that it will be handled during the next performance review.
D. Call attention to the disruption and order that everyone pay attention to the speaker.
Answer: B  
Explanation: A high-performance, self-organizing team should realize and correct the disruptive behavior. [Coaching Agile Teams. Lyssa Adkins.] [Communications]

3. How often are stand-up meetings typically held on an agile project?
A. Bi-weekly
B. Daily
C. Every other day
D. After an iteration
Answer: B  
Explanation: A stand-up meeting is typically held daily and is often referred to as the daily stand-up meeting. [The Art of Agile Development. James Shore.] [Communications]

4. Sheila as team leader, wants to design a comfortable, collaborative team space for her agile project. What can she do as a basic guideline?
A. Arrange seating to group by team function
B. Minimize team member interaction
C. Have a dedicated whiteboard
D. Have large swaths of blank wall space devoid of project information
Answer: C  
Explanation: A warm, welcoming environment that promotes effective communication, innovation, and motivated team members is an important aspect to consider when designing team space. Guidelines for a better agile team space include: collocation of team members; reduction of non-essential noise/distractions; dedicated whiteboard and wall space for information radiators; space for the daily stand-up meeting and other meetings; pairing workstations; and other pleasantries like plants and comfortable furniture. [Agile Retrospectives: Making Good Teams Great. Esther Derby, Diana Larsen, Ken Schwaber.] [Communications]

5. Select the response that is NOT an advantage of using an information radiator.
A. Improves team communication
B. Makes communication less time consuming
C. Makes it easy for all team members to track progress
D. Removes the need for project planning
Answer: D  
Explanation: All successful projects, regardless of management philosophy, require project planning. The use of information radiators on an agile project offer several advantages. They reduce lengthy communication, allow for all team members and stakeholders to review project status throughout a project, and reduce the need of other more time-consuming communication methods, like e-mails or memorandums. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Communications]

6. How does an agile team promote customer engagement?
A. With regular communication between the customer and team.
B. With incentives and kickbacks for approving completed features.
C. With a defect information radiator showing customer meeting absences.
D. With bi-weekly communication between the customer and team.
Answer: A  
Explanation: An agile approach heavily emphasizes the need for direct customer involvement to ensure product quality and value. One way to promote customer engagement is to have regular communication between the customer and team. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Communications]

7. What type of information do information radiators typically portray?
A. A histogram showing the highest velocity of all agile teams worldwide.
B. The weather, local time, and stock exchange quotes.
C. User story development status, system defects, iteration feature development status.
D. The text of user stories with highlighting showing a need for clarification from stakeholders.
Answer: C  
Explanation: An information radiator displays project status-related information, such as user story development status, burndown charts, and task boards. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Communications]

8. Not all company cultures are right for the agile methodology. With respect to communication, what type of culture is a good fit for the agile methodology?
A. A culture with a highly focused distribution of power that requires many levels of clearance for communication
B. A culture that values open, face-to-face communication
C. A culture with strict communication channels and clear hierarchical divisions
D. A culture that retains physical separation between the agile team and customer or customer representative
Answer: B  Explanation: An open, face-to-face communication culture is the best suited culture for an agile team. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Communications]

9. As team leader, Walter must interact with the customer frequently. What is one significant requirement of the team leader with respect to communication?
A. Walter must communicate the results of scrum tests with the development team.
B. Walter must facilitate communication between the developers and customer.
C. Walter must communicate the fail tests he wrote before an iteration to the customer.
D. Walter must facilitate communication on the functional requirements specification document.
Answer: B  
Explanation: As a team leader or agile project manager, you must facilitate communication between the development team and customer to ensure that requirements are understood and implemented correctly. One of the four Agile Manifesto values underscores customer collaboration. The team leader must facilitate this collaboration to deliver value. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Communications]


10. How often are information radiators updated?
A. Every week
B. At the end of each iteration
C. Constantly
D. Never
Answer: C  
Explanation: Constantly is the best answer. Information radiators should be updated whenever the posted data has changed to keep all team members and stakeholders up to date. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Communications]

11. Empathy is a valuable human emotion for generating trust in a team. What types of empathy on an agile project can help build trust?
A. Customer-programmer empathy and programmer-tester empathy
B. Customer-stakeholder empathy and customer-product owner empathy
C. Stakeholder-customer empathy and customer-programmer empathy
D. Customer-product owner empathy and programmer-tester empathy
Answer: A  Explanation: Customer-programmer empathy and programmer-tester empathy help generate team trust on an agile project. [The Art of Agile Development. James Shore.] [Communications]

12. What is an effective method for improving team collaboration?
A. Emphasize the use of top-down decision making.
B. Emphasize the use of comprehensive documentation.
C. Emphasize the isolation of team members.
D. Emphasize the use of face-to-face communication.
Answer: D  
Explanation: Face-to-face communication enhances team collaboration. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Communications]

13. What do team members discuss in the daily stand-up meeting?
A. Work breakdown structures
B. Stakeholder inconsistencies
C. Software development methods
D. Current progress and any issues or impediments that are impacting progress
Answer: D  
Explanation: In a daily stand-up meeting team members discuss current progress and any issues or impediments that are impacting progress. Each team member shares what he or she has achieved since the last meeting, what he or she will achieve before the next meeting, and what obstacles may prevent him or her from achieving progress. [The Art of Agile Development. James Shore.] [Communications]

14. In the scrum methodology, how long do daily stand-up meetings, or scrums, typically last?
A. 2 to 4 hours
B. 1.5 to 2.0 hours
C. 30 to 60 minutes
D. 15 minutes
Answer: D  
Explanation: In the scrum methodology, daily stand-up meetings, or scrums, should last no longer than 15 minutes. Some scrum instances use stop watches to track time and use a 'talking stick' to help indicate whose sole turn it is to share pertinent information. [The Art of Agile Development. James Shore.] [Communications]

15. In the scrum-based agile project management methodology, what are stand-up meetings called?
A. Daily scrum
B. Pit
C. Sprint
D. Dailies
Answer: A  Explanation: In the scrum-based agile project management methodology, daily stand-up meetings are referred to as 'scrums' or 'Daily scrum.' [The Art of Agile Development. James Shore.] [Communications]

1. If a team has a velocity of 20 story points and there are 83 story points remaining in the backlog and excluding all other potential constraints like increased scope, how many iterations should it take for the project team to complete the remaining story points?
A. 6
B. 3
C. 5
D. 4
Answer: C 
Explanation:83/20=4.15. Round 4.15 up to 5. 5 iterations is the best answer. [Agile Estimating and Planning. Mike Cohn.] [Planning, monitoring, and adapting]

2. When a user story is estimated to be 0 story points, what does it indicate?
A. That the user story costs 0 points.
B. That the user story has no value.
C. That the user story is an impediment to progress.
D. That the user story takes minimal effort to design, build, and test.
Answer: D 
Explanation:A 0 point user story is said to be of minimal effort for a development team. [Agile Estimating and Planning. Mike Cohn.] [Planning, monitoring, and adapting]

3. In scrum a change report is used to document a change in scope. When is a change report typically created?
A. During release planning
B. Immediately after any scope change
C. After a sprint
D. During sprint planning
Answer: C 
Explanation:A change report is typically authored after a sprint has completed. [Agile Project Management with Scrum. Ken Schwaber.] [Planning, monitoring, and adapting]

4. What does WIP stand for?
A. Work in product
B. Work in production
C. Work in process
D. Work in places
Answer: C 
Explanation:A lean manufacturing philosophy is to eliminate waste. One defined waste type in the lean philosophy is inventory, which is also referred to as work in process (WIP). WIP is material or parts that have started production but are not yet a finished or "done" product. Inventory is considered wasteful because it costs money to purchase, store, and maintain. One way of reducing inventory is to reduce the WIP at individual machines or servers by only moving as fast as your slowest machine or processor (the system bottleneck). Agile also strives to control its WIP through WIP limits by completing all features to a "done" state before beginning development of new features. One can think of an iteration or sprint as a process that can develop a certain amount of features. In this analogy, the WIP limit is equivalent to the sprint backlog. By maintaining a WIP limit equal to the sprint backlog, no features should be incomplete at the sprint review. [Lean-Agile Software Development: Achieving Enterprise Agility. Alan Shalloway, Guy Beaver, James R. Trott.] [Planning, monitoring, and adapting]

5. When is acceptance criteria defined by the customer?
A. Only during iteration planning.
B. When a user story is picked for an iteration.
C. After user story definition and before coding starts.
D. Only during release planning.
Answer: C 
Explanation:Acceptance criteria is typically defined in tandem with user story definition during release planning; however, acceptance criteria can also be defined during iteration planning once a story has been picked for the iteration. The one steadfast rule is that acceptance criteria must be defined before development begins. Like agile planning, the definition of acceptance criteria is constantly evolving as the conversation with the product owner matures. [The Art of Agile Development. James Shore.] [Planning, monitoring, and adapting]

6. Greg is ready to select another task for execution in the current iteration. He reviews the task and realizes that the estimated time on the task card is most likely too low. What should Greg do?
A. Select a different user story
B. Remove the card from the task board and place it in the product backlog
C. Deal with the minor inconsistency in private and work overtime to keep the iteration on schedule
D. Update the time on the task card as soon as possible
Answer: D 
Explanation:Agile team members should feel free to update incorrect task time estimates as soon as possible. Team members can use current iteration progress and accrued experience to come to a new task time estimate. [Lean-Agile Software Development: Achieving Enterprise Agility. Alan Shalloway, Guy Beaver, James R. Trott.] [Planning, monitoring, and adapting]

7. What two artifacts are available to agile practitioners to summarize a release plan?
A. Product vision and project data sheet
B. Project parking lot and story card layout
C. Project charter and sprint change report
D. Product vision and project charter
Answer: B 
Explanation:An agile practitioner can use the project parking lot and story card layout to summarize a release plan. [Agile Estimating and Planning. Mike Cohn.] [Planning, monitoring, and adapting]

8. What is one type of information radiator that a scrum master uses to track and monitor team progress?
A. RFID
B. Task board
C. Gantt chart
D. Work breakdown structure (WBS)
Answer: B 
Explanation:An agile team often uses a task board to monitor and control progress. A task board identifies tasks to be completed during an iteration and their progress. [Lean-Agile Software Development: Achieving Enterprise Agility. Alan Shalloway, Guy Beaver, James R. Trott.] [Planning, monitoring, and adapting]

9. Which team member should lead or facilitate the sprint review?
A. Executive sponsor
B. External facilitator
C. Product owner
D. Scrum master
Answer: C 
Explanation:Because the product owner is responsible for ROI and has the most knowledge on what the complete objectives are for a product, the product owner should lead the sprint review. [Agile Project Management with Scrum. Ken Schwaber.] [Planning, monitoring, and adapting]
10. In the agile framework, what is blitz planning?
A. Blitz planning incorporates story dependencies and involves using cards to plan a project where timeline, tasks, and story dependencies are identified and considered.
B. Blitz planning incorporates randomizing pair programmers every iteration to promote cross-functional team development.
C. Blitz planning incorporates increasing user story WIP in an iteration to determine where natural bottlenecks occur so that the team may confront them in an upcoming retrospective.
D. Blitz planning incorporates overloading an iteration with 10% more user stories than the team's current estimated velocity in order to see if the team can reach new velocity levels. The blitz serves as a motivator for the team to improve performance.

Answer: A 
Explanation:Blitz planning incorporates story dependencies and involves using cards to plan a project where timeline, tasks, and story dependencies are identified and considered. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Planning, monitoring, and adapting]

11. What is the first step agile team's take during iteration planning?
A. Aggregating similar user stories into meta-stories.
B. Decomposing large or complex user stories into smaller, more manageable user stories.
C. Aggregating dissimilar user stories into meta-stories.
D. Refactoring testing code for the upcoming iteration
Answer: B 
Explanation:During iteration planning, the team follows three steps to create an iteration backlog: 1) The team decomposes large or complex user stories into multiple, smaller stories, 2) The team breaks each user story into development tasks, and 3) The team estimates the task effort or duration, typically using ideal hours. [The Art of Agile Development. James Shore.] [Planning, monitoring, and adapting]

12. As a developer on the agile team, Greg is beginning development on a task. Greg is at the task board and must place the task card in the correct column of the task board to update everyone of its status. In which column should Greg place the task card?
A. To do
B. Ready for testing
C. Done
D. In progress
Answer: D 
Explanation:Greg should place the task card in the 'in progress' column to signify that the task is currently being executed. [Lean-Agile Software Development: Achieving Enterprise Agility. Alan Shalloway, Guy Beaver, James R. Trott.] [Planning, monitoring, and adapting]

13. In general, how can story points and value points be considered?
A. Story points represent quality and value points represent value.
B. Story points represent cost and value points represent benefit.
C. Story points represent quality and value points represent benefit.
D. Story points represent story value and value points represent product value.
Answer: B 
Explanation:In general, story points can be considered as the cost of developing a user story, while value points can be considered as the benefit of developing a user story. [Agile Estimating and Planning. Mike Cohn.] [Planning, monitoring, and adapting]
14. What technique can an agile project manager use for planning in complex projects?
A. Task board plan
B. Communication plan
C. Rolling wave or rolling look ahead plan
D. Work plan
Answer: C 
Explanation:In large, complex projects, agile project leaders can facilitate iteration planning by using a rolling wave or rolling look ahead plan, which involves making plans for the next few iterations at a time. [Agile Estimating and Planning. Mike Cohn.] [Planning, monitoring, and adapting]

15. As project manager, David needs to facilitate a release plan meeting. What should David share and discuss in detail with the project team?
A. The project vision
B. The release and iteration vision
C. The milestone exit criteria
D. The product vision
Answer: D 
Explanation:In release planning, the agile project manager discusses the product vision with the development team in detail. This ensures that the proper requirements, acceptance criteria, and priorities are established. [The Art of Agile Development. James Shore.] [Planning, monitoring, and adapting]

1. Often times during release planning user stories are categorized and organized by theme. Which of the following agile artifact is often used to show organization and progress of user stories by theme?
A. Theme parking garage
B. Theme runway
C. Story theme chart
D. Parking lot chart
Answer: D 
Explanation: A parking lot chart is an agile artifact used to organize and categorize user stories by theme. A parking lot chart typically includes the name of the identified themes, the number of stories and story points it includes, and a progress chart to show the completion percentage of story points. For example, a parking lot chart could have a theme of 'database' with 6 user stories worth 80 story points at a 50% completion. A 50% completion would indicate that 40 story points had been completed, but NOT necessarily that 3 stories had been completed because not all stories are equivalent in effort. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

2. What is a project buffer?
A. Extra time added to each time-boxed value for a task to account for delays, obstacles, and other unforeseen issues to help predict an accurate project completion date.
B. Extra time added to the beginning of a project to account for team discovery
C. Extra time added to the end of a project to account for delays, obstacles, and other unforeseen issues to help predict an accurate completion date.
D. Extra time added throughout a project to account for reflection workshops

Answer: C 
Explanation: A project buffer is extra time added to the end of a project to account for delays, obstacles, and other unforeseen issues to help predict an accurate completion date. A project buffer can be estimated using several methods. Three commonly used methods are 1) square root of the sum of squares method, 2) Critical chain project management method (CCPM), 3) halving the sum of most likely estimates. The square root of the sum of squares method involves finding a local safety for all tasks, squaring all the local safeties, summing these squares, and then finding the square root of the sum. The Critical chain project management method (CCPM) is the sum of half the local safeties of all tasks. The local safety is the difference between the 50% confidence estimate and the 90% confidence estimate. The halving the sum of most likely estimates method involves adding all the most likely estimates and dividing by two. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

3. On a burndown chart, two series are typically charted. Select the response that lists those two series (also referred to as lines).
A. The net and gross work remaining
B. The actual and ideal work remaining
C. The estimated and ideal work remaining
D. The actual and net work remaining

Answer: B 
Explanation: A project burndown chart is an often used information radiator to show iteration progress. It charts two series: the actual work remaining and ideal/estimated work remaining. The vertical axis is the work unit (often story points or hours) and the horizontal axis is iteration duration (typically in number of days). The ideal/estimated work series is a straight, downward sloping line originating on the vertical axis at the value of work to be completed (e.g., 20 story points) and extending to the horizontal axis (i.e., 0 story points) on the last day of the iteration. The actual series is dependent upon the agile team's productivity and the task complexity and is updated daily. The actual series is typically volatile and is not a straight line but ebbs and flows as the project team tackles the development process. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

4. What is a story point?
A. Fixed unit of testing effort.
B. Dynamic unit of testing effort.
C. Dynamic unit of development effort.
D. Fixed unit of development effort.
Answer: D 
Explanation: A story point is a fixed unit of development effort. It is used in the relative sizing of user stories to estimate work effort involved with development. Story points are not time-based, meaning [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]
5. In agile estimating and planning, what is 'incremental' revenue?
A. Revenue retained through the development of new product features or services that prevent existing customers from stopping use of the existing product.
B. New revenue realized through the sales of products or services to new customers.
C. Additional revenue realized through the sales of new product features or services to existing customers.
D. New revenue found in a hidden value stream.

Answer: C 
Explanation: Additional revenue is revenue realized through the sales of new product features or services to existing customers. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

6. What is affinity estimating?
A. A method to estimate time to market.
B. A method to estimate user story work effort.
C. A method to estimate customer reaction to product features.
D. Another name for planning poker.

Answer: B 
Explanation: Affinity estimating is a method to predict the work effort, typically in story points, of developing a user story. It is particularly useful for large product backlogs. Although several methods exist, the basic affinity estimating method involves sizing user stories on a scale from small to large. The scale can be a Fibonacci sequence or t-shirt sizes and is typically taped to a wall in a large conference room. Participants then attach their user stories to the wall as estimates. It is often done in silence and has several iterations until the user stories have been estimated. [The Art of Agile Development. James Shore.] [Agile estimation]

7. When estimating the relative work effort to develop user stories, agile teams have both ideal days and story points as a method for estimation. What should agile teams be weary of doing with these methods?
A. Using both estimate methods simultaneously in a project.
B. Using ideal days too early in a project
C. Forgetting to convert both methods into story velocity for a common basis of estimation
D. Using story points too early in a project

Answer: A 
Explanation: Agile teams should agree to one method of estimation, either story points or ideal days, as both use different units of measurement and can lead to confusion. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

8. How can an agile team estimate the relative size of developing a user story?
A. Using story points
B. Using decomposition
C. Using velocity
D. Using aggregation

Answer: A 
Explanation: Agile teams should agree to one method of estimation, either story points or ideal days, as both use different units of measurement and can lead to confusion. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

9. How are planning poker and affinity estimating similar?
A. They are both methods used in agile to estimate task difficulty.
B. They are both methods used in agile to estimate risk.
C. They are both methods used in agile to estimate value.
D. They are both methods used in agile for relative sizing of the work effort involved for developing user stories.

Answer: D 
Explanation: Both planning poker and affinity estimation are agile techniques used to size the work effort of developing user stories. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

10. Kyle's team just completed a sprint. The team had estimated that it could complete 45 story points, but only completed 30 story points in the sprint. How many story points would be a safe estimate for to estimate for the next sprint?
A. 45
B. 30
C. 50
D. 40

Answer: B 
Explanation: Estimating how many user story points a team can complete in a sprint/iteration should be based upon its previous iterations, if possible. If Kyle's team estimated 45 story points in its first sprint but completed only 30 story points, it would be wise to estimate no more than 30 for its next sprint/iteration. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

11. Besides using story points to estimate the relative size of a user story, how else may an agile team estimate user story size?
A. Using exact time-boxing
B. Using ideal days
C. Using heuristics
D. Using ideal velocity

Answer: B 
Explanation: Instead of using story points, agile teams may estimate the relative sizes of user stories using ideal days. Ideal days represents the amount of days - uninterrupted by meetings, personal life, non-working days, or any other delays, obstacles or distractions - that it would take a single person to build, test, and release the user story, relative to other user stories in the backlog. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

12. When is it appropriate to estimate tasks for an iteration?
A. Both during iteration planning and during the iteration itself
B. Only during release planning
C. During the iteration
D. During iteration planning

Answer: A 
Explanation: It is appropriate to estimate tasks both during iteration planning and throughout the iteration. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

13. In agile estimating and planning, what is 'new' revenue?
A. New revenue found in a hidden value stream.
B. Additional revenue realized through the sales of new product features or services to existing customers.
C. Revenue retained through the development of new product features or services that prevent existing customers from stopping use of the existing product.
D. New revenue realized through the sales of products or services to new customers.

Answer: D 
Explanation: New revenue is revenue realized through the sales of products or services to new customers. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

14. Name an agile planning technique used to estimate the point value of a user story.
A. Planning poker
B. Texas Hold'Em
C. Narrowband Delphi
D. Delphi narrowband

Answer: A 
Explanation: Planning poker is a common agile estimation technique used to estimate the relative point value of a user story. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

15. What agile estimation technique is conducted using a deck of cards for quickly estimating the relative work effort of developing user stories in a product backlog?
A. Affinity estimation
B. Planning poker
C. SMART
D. Planning game

Answer: B 
Explanation: Planning poker is based upon the wideband Delphi estimation technique. It is a consensus-based technique for estimating effort. Sometimes called scrum poker, it is a technique for a relative estimation of effort, typically in story points, to develop a user story. At a planning poker meeting, each estimator is given an identical deck of planning poker cards with a wide range of values. The Fibonacci sequence is often used for values for planning poker (i.e., 0, 1, 1, 2, 3, 5,8,etc.); another common sequence is (question mark, 0, 1/2, 1, 2, 3, 5, 8, 13, 20, 40, and 100). A planning poker meeting works as follows: 1) a moderator, not estimating, facilitates the meeting. 2) the product owner/manager provides a short overview of the user story and answers clarifying questions posed by the developers. Typically the product owner does not vote. 3) Each estimator selects an estimate of work effort by selecting a card, 4) Once everyone has selected a card, everyone overturns their card concurrently, 5) Estimators with high and low estimates are given a chance to defend positions. 6) The process repeats until there is consensus. The developer who owns the user story is typically given higher credence. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

1. Often times during release planning user stories are categorized and organized by theme. Which of the following agile artifact is often used to show organization and progress of user stories by theme?
A. Theme parking garage
B. Theme runway
C. Story theme chart
D. Parking lot chart
Answer: D 
Explanation:  A parking lot chart is an agile artifact used to organize and categorize user stories by theme. A parking lot chart typically includes the name of the identified themes, the number of stories and story points it includes, and a progress chart to show the completion percentage of story points. For example, a parking lot chart could have a theme of 'database' with 6 user stories worth 80 story points at a 50% completion. A 50% completion would indicate that 40 story points had been completed, but NOT necessarily that 3 stories had been completed because not all stories are equivalent in effort. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

2. What is a project buffer?
A. Extra time added to each time-boxed value for a task to account for delays, obstacles, and other unforeseen issues to help predict an accurate project completion date.
B. Extra time added to the beginning of a project to account for team discovery
C. Extra time added to the end of a project to account for delays, obstacles, and other unforeseen issues to help predict an accurate completion date.
D. Extra time added throughout a project to account for reflection workshops

Answer: C 
Explanation:   A project buffer is extra time added to the end of a project to account for delays, obstacles, and other unforeseen issues to help predict an accurate completion date. A project buffer can be estimated using several methods. Three commonly used methods are 1) square root of the sum of squares method, 2) Critical chain project management method (CCPM), 3) halving the sum of most likely estimates. The square root of the sum of squares method involves finding a local safety for all tasks, squaring all the local safeties, summing these squares, and then finding the square root of the sum. The Critical chain project management method (CCPM) is the sum of half the local safeties of all tasks. The local safety is the difference between the 50% confidence estimate and the 90% confidence estimate. The halving the sum of most likely estimates method involves adding all the most likely estimates and dividing by two. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

3. On a burndown chart, two series are typically charted. Select the response that lists those two series (also referred to as lines).
A. The net and gross work remaining
B. The actual and ideal work remaining
C. The estimated and ideal work remaining
D. The actual and net work remaining
Answer: B 
Explanation:   A project burndown chart is an often used information radiator to show iteration progress. It charts two series: the actual work remaining and ideal/estimated work remaining. The vertical axis is the work unit (often story points or hours) and the horizontal axis is iteration duration (typically in number of days). The ideal/estimated work series is a straight, downward sloping line originating on the vertical axis at the value of work to be completed (e.g., 20 story points) and extending to the horizontal axis (i.e., 0 story points) on the last day of the iteration. The actual series is dependent upon the agile team's productivity and the task complexity and is updated daily. The actual series is typically volatile and is not a straight line but ebbs and flows as the project team tackles the development process. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

4. What is a story point?
A. Fixed unit of testing effort.
B. Dynamic unit of testing effort.
C. Dynamic unit of development effort.
D. Fixed unit of development effort.
Answer: D 
Explanation:  A story point is a fixed unit of development effort. It is used in the relative sizing of user stories to estimate work effort involved with development. Story points are not time-based, meaning [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

5. In agile estimating and planning, what is 'incremental' revenue?
A. Revenue retained through the development of new product features or services that prevent existing customers from stopping use of the existing product.
B. New revenue realized through the sales of products or services to new customers.
C. Additional revenue realized through the sales of new product features or services to existing customers.
D. New revenue found in a hidden value stream.
Answer: C 
Explanation:   Additional revenue is revenue realized through the sales of new product features or services to existing customers. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

6. What is affinity estimating?
A. A method to estimate time to market.
B. A method to estimate user story work effort.
C. A method to estimate customer reaction to product features.
D. Another name for planning poker.
Answer: B 
Explanation:   Affinity estimating is a method to predict the work effort, typically in story points, of developing a user story. It is particularly useful for large product backlogs. Although several methods exist, the basic affinity estimating method involves sizing user stories on a scale from small to large. The scale can be a Fibonacci sequence or t-shirt sizes and is typically taped to a wall in a large conference room. Participants then attach their user stories to the wall as estimates. It is often done in silence and has several iterations until the user stories have been estimated. [The Art of Agile Development. James Shore.] [Agile estimation]

7. When estimating the relative work effort to develop user stories, agile teams have both ideal days and story points as a method for estimation. What should agile teams be weary of doing with these methods?
A. Using both estimate methods simultaneously in a project.
B. Using ideal days too early in a project
C. Forgetting to convert both methods into story velocity for a common basis of estimation
D. Using story points too early in a project
Answer: A 
Explanation:   Agile teams should agree to one method of estimation, either story points or ideal days, as both use different units of measurement and can lead to confusion. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

8. How can an agile team estimate the relative size of developing a user story?
A. Using story points
B. Using decomposition
C. Using velocity
D. Using aggregation
Answer: A 
Explanation:   Agile teams typically use story points to estimate the relative size or effort of developing a user story [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

9. How are planning poker and affinity estimating similar?
A. They are both methods used in agile to estimate task difficulty.
B. They are both methods used in agile to estimate risk.
C. They are both methods used in agile to estimate value.
D. They are both methods used in agile for relative sizing of the work effort involved for developing user stories.
Answer: D 
Explanation:  Both planning poker and affinity estimation are agile techniques used to size the work effort of developing user stories. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

10. Kyle's team just completed a sprint. The team had estimated that it could complete 45 story points, but only completed 30 story points in the sprint. How many story points would be a safe estimate for to estimate for the next sprint?
A. 45
B. 30
C. 50
D. 40
Answer: B 
Explanation:   Estimating how many user story points a team can complete in a sprint/iteration should be based upon its previous iterations, if possible. If Kyle's team estimated 45 story points in its first sprint but completed only 30 story points, it would be wise to estimate no more than 30 for its next sprint/iteration. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

11. Besides using story points to estimate the relative size of a user story, how else may an agile team estimate user story size?
A. Using exact time-boxing
B. Using ideal days
C. Using heuristics
D. Using ideal velocity
Answer: B 
Explanation:   Instead of using story points, agile teams may estimate the relative sizes of user stories using ideal days. Ideal days represents the amount of days - uninterrupted by meetings, personal life, non-working days, or any other delays, obstacles or distractions - that it would take a single person to build, test, and release the user story, relative to other user stories in the backlog. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

12. When is it appropriate to estimate tasks for an iteration?
A. Both during iteration planning and during the iteration itself
B. Only during release planning
C. During the iteration
D. During iteration planning
Answer: A 
Explanation:   It is appropriate to estimate tasks both during iteration planning and throughout the iteration. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

13. In agile estimating and planning, what is 'new' revenue?
A. New revenue found in a hidden value stream.
B. Additional revenue realized through the sales of new product features or services to existing customers.
C. Revenue retained through the development of new product features or services that prevent existing customers from stopping use of the existing product.
D. New revenue realized through the sales of products or services to new customers.
Answer: D 
Explanation:  New revenue is revenue realized through the sales of products or services to new customers. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

14. Name an agile planning technique used to estimate the point value of a user story.
A. Planning poker
B. Texas Hold'Em
C. Narrowband Delphi
D. Delphi narrowband
Answer: A 
Explanation:   Planning poker is a common agile estimation technique used to estimate the relative point value of a user story. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

15. What agile estimation technique is conducted using a deck of cards for quickly estimating the relative work effort of developing user stories in a product backlog?
A. Affinity estimation
B. Planning poker
C. SMART
D. Planning game
Answer: B 
Explanation:   Planning poker is based upon the wideband Delphi estimation technique. It is a consensus-based technique for estimating effort. Sometimes called scrum poker, it is a technique for a relative estimation of effort, typically in story points, to develop a user story. At a planning poker meeting, each estimator is given an identical deck of planning poker cards with a wide range of values. The Fibonacci sequence is often used for values for planning poker (i.e., 0, 1, 1, 2, 3, 5,8,etc.); another common sequence is (question mark, 0, 1/2, 1, 2, 3, 5, 8, 13, 20, 40, and 100). A planning poker meeting works as follows: 1) a moderator, not estimating, facilitates the meeting. 2) the product owner/manager provides a short overview of the user story and answers clarifying questions posed by the developers. Typically the product owner does not vote. 3) Each estimator selects an estimate of work effort by selecting a card, 4) Once everyone has selected a card, everyone overturns their card concurrently, 5) Estimators with high and low estimates are given a chance to defend positions. 6) The process repeats until there is consensus. The developer who owns the user story is typically given higher credence. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

1. In agile modeling, what is a persona?
A. A made up personality used for facilitating the daily stand-up meeting
B. An assigned personality used in reflection workshops.
C. A notional user of the system under development.
D. A method to describe the customer's personality for the day so the team may adapt to his or her feedback in the most effective way
Answer: C 
Explanation:A persona is a notional user of the system under development. Being much more detailed than actors in use case modeling where generic user names are assigned (e.g., end user), personas try to elaborate on users with detailed descriptions to provide context to the developers. Some personas have such notional details as name, address, age, income, likes and dislikes, and other specific details. [User Stories Applied: For Agile Software Development. Mike Cohn.] [Agile analysis and design]

2. What is a theme in the context of agile development?
A. A set of related topics for the retrospective.
B. A set of related programmer tasks.
C. A set of related topics for scrum review.
D. A set of related user stories.
Answer: D 
Explanation: A theme, in the context of agile development, is a set of related user stories. [User Stories Applied: For Agile Software Development. Mike Cohn.] [Agile analysis and design]

3. Of the following, select the response which holds the three aspects of a user story.
A. Written description; conversations; and testing criteria
B. Spoken dialogue; written rationale; and done done criteria
C. Spoken description; written dialogue; and testing criteria
D. Spoken description; collaborative dialogue; and testing criteria
Answer: A 
Explanation:A user story is composed of the following three aspects: 1) A written description of the story; 2) Conversations about the story (think verbal, rather than written here); and, 3) Tests that convey when a story can be accepted or complete. [User Stories Applied: For Agile Software Development. Mike Cohn.] [Agile analysis and design]

4. During iteration planning the team is having a difficult time interpreting the customer's intent of the user story. What should the team do?
A. Collaborate with the customer to clarify the user story.
B. Discuss among the product development team.
C. Conduct several spike tasks.
D. Research the domain.
Answer: A 
Explanation:Because agile emphasizes customer collaboration, the team should simply collaborate with the customer to clarify the user story. [User Stories Applied: For Agile Software Development. Mike Cohn.] [Agile analysis and design]

5. Code refactoring allows for
A. Restructuring of test code to update unit test code without changing external behavior.
B. Restructuring of source code to update external functionality and internal behavior.
C. Restructuring of source code to update external functionality without changing internal behavior.
D. Restructuring of source code to update internal code without changing external behavior.
Answer: D 
Explanation: Code refactoring is method of improving working source code to make it more efficient, readable, extensible, maintainable and less complex. Through refactoring one is able to restructure source code modifying internal code without changing the external behavior. [Agile Retrospectives: Making Good Teams Great. Esther Derby, Diana Larsen, Ken Schwaber.] [Agile analysis and design]

6. The customer is off site this week but insists on seeing a working prototype of the design so that she may provide feedback. What is a suitable prototype method to use?
A. Whiteboard
B. Chart paper
C. HTML or other portable software solution
D. Paper
Answer: C 
Explanation:HTML and other software based solutions are ideal for presenting prototypes to customers, especially when off site. Software based prototypes are dynamic, graphic capable, and portable. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Agile analysis and design]

7. What is the agile story map essentially equivalent to in traditional project management?
A. The product list
B. The product requirements
C. The project plan
D. The project schedule
Answer: C 
Explanation:In agile, the story map is essentially the project plan. It orders the user stories/product features into logical themes to serve as a plan for development. [User Stories Applied: For Agile Software Development. Mike Cohn.] [Agile analysis and design]

8. In agile parlance, what does progressive elaboration refer to?
A. Continuous planning with the expectation that plans and details will inevitably change but become more refined as the project progresses.
B. Continuous planning with the expectation that velocity will increase progressively as the project progresses.
C. Continuous planning with the expectation that estimates of task time will become more progressive as the project evolves.
D. Continuous planning with the expectation that story point values will decrease in relation to the steep learning curve of developers.
Answer: A 
Explanation:Progressive elaboration is continuous planning with the expectation that project plans and details will change but become more refined as the project progresses. [Agile Estimating and Planning. Mike Cohn.] [Agile analysis and design]

9. What are prototypes and how are they used in projects?
A. Prototypes are not used in projects.
B. Prototypes are initial schedules used in a rolling wave plan.
C. Prototypes are relatively low cost, low risk methods to share a design concept for stakeholder feedback.
D. Prototypes are user stories in draft format awaiting acceptance to the product backlog.
Answer: C 
Explanation:Prototypes are low cost, low risk methods to portray a design idea to a customer in order to obtain feedback before development. Although time consuming and having cost, prototypes can help save later costs that may occur if a design is not modeled beforehand to obtain feedback and fails to meet customer expectations. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Agile analysis and design]

10. What is rolling wave planning and how does it relate to progressive elaboration?
A. Rolling wave planning involves planning for an entire release at the beginning of a project. Progressive elaboration assumes that while customer requirements may change, they will not impact the initial rolling wave plan.
B. Rolling wave planning involves a retrospective review of plans from the previous two iterations. Momentum from these two iterations, typically interpreted as velocity, form a 'prediction wave' which can be used to plan the next iteration. Progressive elaboration assumes that the wave will grow in power as the project progresses.
C. Rolling wave planning involves planning in waves or phases. Only the next few iterations are planned in detail and iterations more distant are planned only at a high-level. Progressive elaboration is continuous planning that assumes that details and requirements will be better refined later and will be incorporated into the planning process at the appropriate time.
D. Rolling wave planning and progressive elaboration are both antiquated traditional project management planning techniques.

Answer: C 
Explanation:Rolling wave planning (or rolling look ahead planning) involves planning in waves or phases and is especially useful for large, complex projects. Only the next few iterations are planned in detail and iterations more distant are planned only at a high-level. Progressive elaboration is continuous planning that assumes that details and requirements will be better refined later and will be incorporated into the planning process at the appropriate time. [Agile Estimating and Planning. Mike Cohn.] [Agile analysis and design]

11. Of the following, which user story is NOT closed?
A. A camper can sign up for a trip.
B. A camper can navigate the webpage.
C. A camper can review a detailed trip itinerary.
D. A camper can cancel a trip.
Answer: B 
Explanation: The best answer is "A camper can navigate the webpage" because it is an activity that has no clear end point. The other selections include activities that have a clear end point. [User Stories Applied: For Agile Software Development. Mike Cohn.] [Agile analysis and design]

12. In which agile project management methodology does chartering play a significant role?
A. TDD
B. Crystal
C. XP
D. FDD
Answer: B 
Explanation: The Crystal development process is cyclical/iterative. Its primary components are chartering, delivery cycles, and project wrap-up. Chartering involves creating a project charter, which can last from a few days to a few weeks. Chartering consists of four activities: 1) Building the core project team, 2) performing an Exploratory 360° assessment, 3) fine tuning the methodology, and 3) building the initial project plan. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Agile analysis and design]

13. What is the purpose of the Exploratory 360 assessment?
A. To define the core project team
B. To assess project soundness in terms of business value and feasibility
C. To conduct an introspective reflection on the team makeup
D. To define a project mission and vision
Answer: B 
Explanation: The executive sponsor conducts the Exploratory 360° assessment to assess the business case of the project. Several dimensions are explored: business value, requirements, domain area, and technology impacts. Based on the results the team adjusts the Crystal methodology to the need or, in some cases, the project may be cancelled if serious issues are discovered. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Agile analysis and design]

14. What is the ideal duration range for developing a user story?
A. 1 to 2 sprints
B. 1 to 2 iterations
C. 2 to 5 days
D. 15 days
Answer: C 
Explanation:The ideal development duration range for a user story is 2 to 5 days. [User Stories Applied: For Agile Software Development. Mike Cohn.] [Agile analysis and design]

15. Select the technique that is commonly used to create a story map?
A. MoSCoW
B. MoSTyN
C. MoNTO
D. MoNTauK
Answer: A 
Explanation:The MoSCoW technique is commonly used in agile to prioritize user stories and create a story map. The MoSCoW technique prioritizes user stories into the following groups in descending order of priority: M - Must have; S - Should have; C - Could have; W - Would have. Must have items are those product features which are absolutely essential to develop. Should have items are product features that are not essential but have significant business value. Could have items are product features that would add some business value. Would have items are product features that have marginal business value. [User Stories Applied: For Agile Software Development. Mike Cohn.] [Agile analysis and design]

1. Andy and his team are in the middle of iteration planning. The team has identified from one user story eight required tasks. Approximately how long should each task take to develop or execute?
A. Exactly one hour
B. Less than two hours
C. Between four hours and two days
D. Five business days
Answer: C Explanation: User stories or features are first assigned to iterations during release planning. The user stories are features are then decomposed into tasks during iteration planning so that the tasks may be assigned to specific developers. To help manage planning and monitoring, a rule of thumb for estimating task duration is that each task should take approximately four hours to two days of development work. [The Art of Agile Development. James Shore.] [Planning, monitoring, and adapting]

2. Henry and his agile team have just made a group decision about how many features to build, test, and integrate in the upcoming sprint. What type of decision making model is it when a team makes decisions collaboratively?
A. Exclusive
B. Participatory
C. Inclusive
D. Merit
Answer: B 
Explanation: To build trust among the team, agile believes heavily in participatory decision models where team members collaborate to make decisions. Although a team leader or scrum master will need to make some decisions individually, many decisions can be made by the team collectively. These agile principles are also known as collective ownership, self-organization, and self-discipline. In collective ownership, the team members are equally responsible for project results and are empowered to participate in decision making and problem solving processes. [Agile Retrospectives: Making Good Teams Great. Esther Derby, Diana Larsen, Ken Schwaber.] [Knowledge and Skills: Level 2]

3. What occurs during the initiating phase of traditional project management?
A. Comparing actual vs. planned work
B. Detailed project planning
C. Execution of the project plan
D. Definition of the business objectives
Answer: D 
Explanation: Definition of business objectives occurs during the initiating phase in a traditional project management effort. [Manifesto for Agile Software Development. Agile Alliance.] [Knowledge and Skills: Level 1]

4. Select the last phase of Jim Highsmith's agile project management model.
A. Exploring
B. Speculating
C. Adapting
D. Closing
Answer: D 
Explanation: Jim Highsmith's agile project management model consists of the following five phases: Envisioning, speculating, exploring, adapting, and closing. [Agile Project Management: Creating Innovative Products – 2nd Edition. Jim Highsmith.] [Knowledge and Skills: Level 1]

5. Which is NOT a phase of Highsmith's agile project management?
A. Envisioning
B. Closing
C. Exploring
D. Initiating
Answer: D 
Explanation: The agile project management phases, in sequence, are: Envisioning, speculating, exploring, adapting, closing. [Manifesto for Agile Software Development. Agile Alliance.] [Knowledge and Skills: Level 1]

6. Peter and Zach work together on an agile project as software developers. Because Peter and Zach are collocated they are often aware of each other's daily progress without speaking directly to one another. What are Peter and Zach benefiting from?
A. Kanban communication
B. Extra sensory perception
C. Osmotic communication
D. Chaordic communication
Answer: C 
Explanation: Osmotic communication is a concept of communication where information is shared between collocated team members unconsciously. By sharing the same work environment, team members are exposed to the same environmental sounds and other environmental input and unconsciously share a common framework that improves communication. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Communications]

7. Frank is using an agile framework that emphasizes using a strict business perspective. Which framework is Frank most likely using?
A. Static systems development method (SSDM)
B. Extreme systems development method (XSDM)
C. Dynamic systems development method (DSDM)
D. Dynamic product development method (DPDM)
Answer: C 
Explanation: Scrum is a framework that strives to facilitate the development of complex products quickly and efficiently, the adaptation of changing requirements, the delivery of working products incrementally. Scrum development includes three major phases: pre-game, game, and post-game. Scrum emphasizes the use of product and sprint backlogs, iterative development (termed "sprints"), daily stand-up meetings (termed "scrums"), sprint reviews (demos) and reflection, and the use of information radiators such as task boards and burndown charts. [Ken Schwaber. Agile Project Management with Scrum. Chapter 1.] [Knowledge and Skills: Level 2]

8. Servant leadership is a desirable feature for a team leader in agile. What is the best short description of servant leadership?
A. A translator.
B. A task driver.
C. An enabler.
D. An interpreter.
Answer: C 
Explanation: Servant leadership has its roots with an essay written in 1970 by Robert K Greenleaf. Greenleaf defined servant leaders as humble stewards devoted to their company and work to serve their peers, teams, and customers. In a self-organizing team, a servant leader, as Greenleaf defined it, is ideal as the team leader is an enabler, listening to the agile team's needs, removing obstacles, and providing tools or other support to promote high productivity. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

9. On a burndown chart, how does the charted 'actual work accomplished' series appear?
A. As a straight, downward sloping line
B. Typically as a non-linear line that reflects the ebbs and flows of development
C. As a curved, downward sloping line
D. As a straight, upward sloping line
Answer: B 
Explanation: A project burndown chart is an often used information radiator to show iteration progress. It charts two series: the actual work remaining and ideal/estimated work remaining. The vertical axis is the work unit (often story points or hours) and the horizontal axis is iteration duration (typically in number of days). The ideal/estimated work series is a straight, downward sloping line originating on the vertical axis at the value of work to be completed (e.g., 20 story points) and extending to the horizontal axis (i.e., 0 story points) on the last day of the iteration. The actual series is dependent upon the agile team's productivity and the task complexity and is updated daily. The actual series is typically volatile and is not a straight line but ebbs and flows as the project team tackles the development process. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

10. Which framework often leveraged in agile heavily emphasizes continuous improvement?
A. Extreme software development
B. Kaizen value development
C. Lean software development
D. Extreme unified process (EUP)
Answer: C 
Explanation: Agile project management places strong emphasis on 'continuous improvement.' Continuous improvement processes are built into the agile methodology, from customers providing feedback after each iteration to the team reserving time to reflect on its performance through retrospectives after each iteration. Ongoing unit and integration testing and keeping up with technological/industry developments also play a part in the continuous improvement process. Continuous improvement is also a key principle in the lean methodology, where a focus of removing waste from the value stream is held. [The Art of Agile Development. James Shore.] [Knowledge and Skills: Level 2]

11. Which framework uses the following four phases: 1. inception, 2. elaboration, 3. construction, 4. transition?
A. Simple unified process (SUP)
B. Extreme unified process (EUP)
C. Agile unified process (AUP)
D. Adapted unified process (AdUP)
Answer: C 
Explanation: Agile Unified Process (AUP) is a simplified version of the Unified Process, or UP (UP itself is a more detailed framework for iterative and incremental software development). AUP simplifies UP for the agile framework. AUP projects use four phases: 1) inception, 2) elaboration, 3) construction, and 4) transition. At the end of each short iteration, the team delivers a working product. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Knowledge and Skills: Level 2]

12. Perry is about to prioritize user stories to develop a story map with her agile team. What technique is commonly used to do so?
A. ToRonTO
B. BoSToN
C. MoSCoW
D. HaMBurG
Answer: C 
Explanation: The MoSCoW technique is commonly used in agile to prioritize user stories and create a story map. The MoSCoW technique prioritizes user stories into the following groups in descending order of priority: M - Must have; S - Should have; C - Could have; W - Would have. Must have items are those product features which are absolutely essential to develop. Should have items are product features that are not essential but have significant business value. Could have items are product features that would add some business value. Would have items are product features that have marginal business value. [User Stories Applied: For Agile Software Development. Mike Cohn.] [Agile analysis and design]

13. Two of the Agile Manifesto's four core values cover communication values. Select these values from the list.
A. Face-to-face communication whenever possible and continuous improvement
B. Face-to-face communication whenever possible and self-organizing teams
C. Individuals and interactions over processes and tools, and customer collaboration over contract negotiation
D. Face-to-face communication whenever possible and ensuring that business people and developers work together
Answer: C 
Explanation: The Agile Manifesto developed by the Agile Alliance covers 4 values and 12 principles. The four values are: 1) individuals and interactions over processes and tools, 2) working software over comprehensive documentation, 3) customer collaboration over contract negotiation, and 4) responding to change over following a plan. The 12 principles are: 1) focusing on satisfying the customer, 2) welcoming change, 3) delivering working software frequently, 4) ensuring that business people and developers work together, 5) motivating the individuals involved in development, 6) using face-to-face communication whenever possible, 7) working software as the primary measure of progress, 8) maintaining a constant pace of development, 9) paying continuous attention to technical excellence and good design, 10) aiming for simplicity, 11) using self-organizing teams, and 12) regularly reflecting on how to become more effective. [Manifesto for Agile Software Development. Agile Alliance.] [Communications]

14. Chris is serving as a scrum master for a local software company. In the envisioning phase of Jim Highsmith's agile project management model, Chris and his team will focus on which of the following items?
A. Specification of iterations and release plans
B. Detailed project plan
C. Project vision, scope and requirements, and project schedule
D. Feature breakdown structure
Answer: C 
Explanation: The focus in the envisioning phase is on project vision, scope (and requirements), project schedule, and assembling a project team. [Agile Project Management: Creating Innovative Products – 2nd Edition. Jim Highsmith.] [Knowledge and Skills: Level 1]

15. Select the correct definition of the Critical chain project management method (CCPM) used in estimating a project buffer.
A. Half the squared sum of the 50% confidence estimate for all tasks
B. Sum the 50% confidence estimate for all tasks
C. Half the sum of the total safety time for all the tasks in a project
D. Find the square root of half the 50% confidence estimate for all tasks
Answer: C 
Explanation: A project buffer is extra time added to the end of a project to account for delays, obstacles, and other unforeseen issues to help predict an accurate completion date. A project buffer can be estimated using several methods. Three commonly used methods are 1) square root of the sum of squares method, 2) Critical chain project management method (CCPM), 3) halving the sum of most likely estimates. The square root of the sum of squares method involves finding a local safety for all tasks, squaring all the local safeties, summing these squares, and then finding the square root of the sum. The Critical chain project management method (CCPM) is the sum of half the local safeties of all tasks. The local safety is the difference between the 50% confidence estimate and the 90% confidence estimate. The halving the sum of most likely estimates method involves adding all the most likely estimates and dividing by two. [Agile Estimating and Planning. Mike Cohn.] [Agile estimation]

1. What project artifact is helpful for testers performing an exploratory test? The artifact gives a brief overview of product functionality.
A. The project roadmap.
B. The project vision.
C. The project charter.
D. The project data sheet.
Answer: C 
Explanation: A project charter provides a brief overview of product functionality and serves as a guide for testers performing exploratory testing. [Lean-Agile Software Development: Achieving Enterprise Agility. Alan Shalloway, Guy Beaver, James R. Trott.] [Product quality]

2. How are test-driven development and acceptance test-driven development similar?
A. Both strategies involve writing unit tests that never fail to help software development.
B. They are one and the same strategy, but called by different names based on the agile framework being used.
C. Both strategies involve writing product code before test code.
D. Both strategies involve writing test code before product code.
Answer: D 
Explanation: Acceptance Test Driven Development (ATDD) is similar to Test-driven development (TDD) in that it requires programmers to create tests first before any product code. The tests in ATDD are aimed at confirming features/behaviors that the intended software will have. The iterative cycle of ATDD with its four steps can be remembered as the four Ds: 1) Discuss, 2) Distill, 3) Develop, and 4) Demo. 1) Discuss: The agile team and customer or business stakeholder discuss a user story in detail. Talking about the expected behaviors the user story should have and what it should not. 2) The development team takes those items learned from the discussion and distills them into tests that will verify and validate those behaviors. The distillation process is where the entire team should have a good understanding of what "done" (or completed) means for a user story. That is, what the acceptance criteria are. 3) After distillation, the team develops the test code and product code to implement the product features. 4) Once the product features have been developed, the team demonstrates them to the customer or business stakeholders for feedback. [Lean-Agile Software Development: Achieving Enterprise Agility. Alan Shalloway, Guy Beaver, James R. Trott.] [Product quality]

3. How often is code typically integrated on an XP effort?
A. At least once per day
B. Once per iteration
C. Once per release
D. Immediately before release
Answer: A 
Explanation: An XP project typically integrates code at least once per day. [The Art of Agile Development. James Shore.] [Product quality]

4. Select the best definition 'done.'
A. A team defined term that indicates when a user story point is completed.
B. A team defined term that indicates when a project is successfully completed.
C. A team and product owner defined term that indicates when a feature or product is considered to be completed and ready for shipping.
D. A team defined term that indicates when a scrum has completed for the day.
Answer: C 
Explanation: Because a cornerstone of the scrum framework in agile is to 'always have a product that you could theoretically ship,' it is important for the team and product owner to have a definition of 'done' or what criteria is necessary to consider user features or functionality in a state of finality. [Coaching Agile Teams. Lyssa Adkins.] [Product quality]

5. In agile, what is meant by frequent verification and validation?
A. Because of its tendency to release working products in short time increments, verification and validation take place frequently.
B. Because of its tendency to reuse old programming software, verification and validation take place frequently.
C. Because customer requirements are constantly changing, frequent verification and validation is the only means to ensure the work breakdown structure.
D. Because working products are released only at the end of a project, verification and validation take place frequently.
Answer: A 
Explanation: Because each iteration typically produces a working product that is built and integrated and iterations are typically two to four weeks in length, there is frequent verification and validation to ensure product quality. Verification is the confirmation that a product performs as specified by a customer (e.g. as indicated by a user story) and validation is the confirmation that a product behaves as desired (i.e., meets the customer's need). Sometimes a product may be built and integrated to specification - that is, it can be verified - but it does not meet the intent of the customer - that is, it cannot be validated. [Agile Software Development: The Cooperative Game – 2nd Edition. Alistair Cockburn.] [Product quality]

6. Being continuously integrated theoretically means
A. Having integrated but incomplete units of source code.
B. Having a working product ready to ship at any time.
C. Having semi-working functionality at any time.
D. Having integrated but untested source code.
Answer: B 
Explanation: Being continuously integrated theoretically means having a working product ready to ship at any time. [The Art of Agile Development. James Shore.] [Product quality]

7. Kyle is performing a type of test that is done throughout an agile project and on the completed product. In his testing, Kyle is trying to uncover any software bugs or system design faults that may not have been identified in typical unit testing. What type of testing is Kyle performing?
A. Refactor testing
B. Exploratory testing
C. Assimilation testing
D. Interface testing
Answer: B 
Explanation: Regular exploratory testing is encouraged to improve product quality. Typically, exploratory testing is performed on completed product software to test the system design for any bugs and to identify any new features that may add value to the customer. Exploratory testing should cover what a developer is unable to anticipate through the course of normal unit testing. A project charter is often used as a general overview of the product that exploratory testers use for testing guidance. [The Art of Agile Development. James Shore.] [Product quality]

8. What does TDD stand for in agile parlance?
A. Top-down design
B. Test-design development
C. Test-driven development
D. Test-driven design
Answer: C 
Explanation: Test-driven development, or TDD, is an agile methodology that has software developers develop automated software tests before developing software that implements product features. This helps ensure quality as each bit of feature software is tested individually to remove bugs and improve performance before it is integrated with the final product. [The Art of Agile Development. James Shore.] [Product quality]

9. A product owner specifies in acceptance criteria that a user feature provide extreme excitement to the end user. However, when reviewing the feature in the sprint demo, the product owner complains the feature does not provide the extreme excitement she wanted. Why might this type of reaction occur?
A. Because the iteration ended before the programmers could get the desired excitability for the feature.
B. Because extreme excitement is not easily testable.
C. Because the programmers failed to read the story card properly.
D. Because the product owner changed her mind.
Answer: B 
Explanation: The BEST answer is because the acceptance criteria is too vague (remember the T of INVEST for defining good user stories) and cannot be easily tested. [The Art of Agile Development. James Shore.] [Product quality]

10. The commit build process includes what type of testing?
A. Unit and spike
B. Exploratory and spike
C. Unit and exploratory
D. Unit and integration
Answer: D 
Explanation: The commit build process includes both unit and integration testing. [The Art of Agile Development. James Shore.] [Product quality]

11. Following the XP principle of continuous integration, when is completed code integrated into the code base?
A. Immediately.
B. At the end of the release.
C. At iteration intervals to synchronize configuration management.
D. At the end of the sprint.
Answer: A 
Explanation: The extreme programming (XP) principle of continuous integration is that code is integrated into the full code base as soon as it is built, tested, and completed. Once integrated, the code base and therefore the entire system is built and tested. Continuous integration is just one principle of XP that promotes rapid delivery of software and the early detection of integration defects. [The Art of Agile Development. James Shore.] [Product quality]

12. Jerry on an XP influenced agile team has just completed coding a new feature. When should he integrate the new code into the code base?
A. At the end of the release.
B. At the end of the sprint.
C. At iteration intervals to synchronize configuration management.
D. Immediately.
Answer: D 
Explanation: The extreme programming (XP) principle of continuous integration is that code is integrated into the full code base as soon as it is built, tested, and completed. Once integrated, the code base and therefore the entire system is built and tested. Continuous integration is just one principle of XP that promotes rapid delivery of software and the early detection of integration defects. [The Art of Agile Development. James Shore.] [Product quality]

13. What is an advantage of continuous integration, as practiced in XP?
A. Supports rapid delivery of working software
B. Decreases the need for testing
C. Decreases the need for customer feedback
D. Decreases the need for team communication and collaboration
Answer: A 
Explanation: The extreme programming (XP) principle of continuous integration is that code is integrated into the full code base as soon as it is built, tested, and completed. Once integrated, the code base and therefore the entire system is built and tested. Continuous integration is just one principle of XP that promotes rapid delivery of software and the early detection of integration defects. [The Art of Agile Development. James Shore.] [Product quality]

14. TDD has four basic steps. What is the first step in TDD?
A. Verify and validate that the test fails
B. Write product code and apply the test
C. Refactor the product code
D. Write test code that will fail
Answer: D 
Explanation: The TDD process has four basic steps: Write a test, 2) Verify and validate the test, 3) Write product code and apply the test, 4) Refactor the product code. An example may be that a user has to enter an age value. A good test is to make sure the user data entry is a positive number and not a different type of input, like a letter (i.e., write the test). The programmer would verify that entering a letter instead of a number would cause the program to cause an exception (i.e., v&v the test). The programmer would then write product code that takes user entry for the age value (i.e., write the product code). The programmer would then run the product code and enter correct age values and incorrect age values (i.e., apply the test). If the product code is successful, the programmer would refactor the product code to improve its design. Using these four steps iteratively ensures that programmers think about how a software program might fail first and to build product code that is holistically being tested. This helps produce high quality code. [The Art of Agile Development. James Shore.] [Product quality]

15. Sarah is explaining to Hanson the similarities between test-driven development and acceptance test-driven development. Can you help her identify a similarity?
A. Both strategies involve using an inversion model to refactor old software code.
B. Both techniques involve using a cyclical, four-step process.
C. Both strategies are for the Visual Basic programming language only.
D. Both strategies are for the C# programming language only.
Answer: B 
Explanation: Acceptance Test Driven Development (ATDD) is similar to Test-driven development (TDD) in that it requires programmers to create tests first before any product code. The tests in ATDD are aimed at confirming features/behaviors that the intended software will have. The iterative cycle of ATDD with its four steps can be remembered as the four Ds: 1) Discuss, 2) Distill, 3) Develop, and 4) Demo. 1) Discuss: The agile team and customer or business stakeholder discuss a user story in detail. Talking about the expected behaviors the user story should have and what it should not. 2) The development team takes those items learned from the discussion and distills them into tests that will verify and validate those behaviors. The distillation process is where the entire team should have a good understanding of what "done" (or completed) means for a user story. That is, what the acceptance criteria are. 3) After distillation, the team develops the test code and product code to implement the product features. 4) Once the product features have been developed, the team demonstrates them to the customer or business stakeholders for feedback. [Lean-Agile Software Development: Achieving Enterprise Agility. Alan Shalloway, Guy Beaver, James R. Trott.] [Product quality]

1. Which of the following best defines collaboration?
A. Working as a team to overcome conflict.
B. Working individually to achieve objectives.
C. Working and communicating as a team to achieve objectives.
D. Working independently to achieve personal goals.
Answer: C 
Explanation: Collaboration is a key soft skill negotiation skill. It involves working in groups to create ideas, solve problems, and produce solutions. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

2. Which of the following best defines conflict resolution?
A. The facilitation of resolving conflict among team members.
B. The facilitation of acceptance test-driven development conflicts.
C. The facilitation of test-driven development conflicts.
D. The facilitation of resolving conflicting code integration.
Answer: A 
Explanation: Conflict resolution is a key soft skill negotiation skill. It involves applying proper leadership techniques to resolve and diffuse any conflict between team members or other stakeholders. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

3. Which of the following is the best definition of emotional intelligence?
A. Being aware and in control of your emotions.
B. Being aware of team members' emotions.
C. Being aware of your emotions.
D. Being in control of team members' emotions.
Answer: A 
Explanation: Having a high emotional intelligence means self-awareness, control over your own emotions, and being attentive to other team members' emotions. A high emotional intelligence allows team members to collaborate effectively. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

4. Having a high emotional intelligence is important to promote effective communication in an agile team. Which of the following\ is one of the seven components of emotional intelligence as defined by Higgs & Dulewicz?
A. Self determination
B. Self-awareness
C. Introversion
D. Competitiveness
Answer: B 
Explanation: Higgs & Dulewicz (1999) defines emotional intelligence using seven components: 1) Self-awareness, 2) Emotional resilience, 3) Motivation, 4) Interpersonal sensitivity, 5) Influence, 6) Intuitiveness, and 7) Conscientiousness. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

5. According to Highsmith, what two dimensions help define 'adaptive leadership?'
A. Adaptive agility and anticipatory agility
B. Being agile and practicing agile
C. Being agile and doing agile
D. Adaptive agility and prescriptive agility
Answer: C 
Explanation: Highsmith defines adaptive leadership as two dimensional: Being agile and doing agile. Being agile includes focusing on cornerstones of agile project management, like incremental delivery, continuous integration, and adapting to changing requirements. Doing agile includes several activities that an agile leader must do: do less; speed-to-value, quality, and engage and inspire. [Agile Project Management: Creating Innovative Products – 2nd Edition. Jim Highsmith.] [Soft skills negotiation]

6. Which of the following best defines conflict resolution?
A. Resolving team member and customer communication issues.
B. Resolving conflict among team members.
C. Removing problematic team members.
D. Resolving issues of standard compliance among team members.
Answer: B 
Explanation: Conflict resolution is a key soft skill negotiation skill. It involves applying proper leadership techniques to resolve and diffuse any conflict between team members or other stakeholders. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

7. Which of the following summarizes principles, leadership, and teams in the agile framework?
A. Leaders manage teams and teams manage principles.
B. Leaders manage teams under established principles.
C. Teams manage principles and leaders.
D. Leaders manage principles and principles manage teams.
Answer: D 
Explanation: In high performance teams, leaders manage the principles and principles manage the teams. [Becoming Agile: …in an imperfect world. Greg Smith, Ahmed Sidky.] [Soft skills negotiation]

8. Which of the following best defines negotiation?
A. Holding reflection workshops to remove any obstacles from team processes and practices.
B. Holding discussions to come to agreement between two or more parties.
C. Having the customer define expectations of software deliverables.
D. Adapting to change in team dynamics through constant collaboration.
Answer: B 
Explanation: Negotiation is a key soft skill negotiation skill. It involves discussion or conversation to work towards a common understanding between two parties. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

9. What is one effective way to improve collaboration in an agile effort?
A. Through the strict adherence of e-mail for communication.
B. Through isolation of team members.
C. Through the use of pair programming.
D. Through the seating of team members by function.
Answer: C 
Explanation: Pair programming is an effective method for improving team collaboration. [Agile Retrospectives: Making Good Teams Great. Esther Derby, Diana Larsen, Ken Schwaber.] [Soft skills negotiation]

10. Which of the following is the best definition of servant leadership?
A. Listening to your team and providing it with the support it needs to be productive.
B. Leading team members by example.
C. Removing the customer as an obstacle to the development team.
D. Listening to your customer and translating requirements into specifications.
Answer: A 
Explanation: Servant leadership has its roots with an essay written in 1970 by Robert K Greenleaf. Greenleaf defined servant leaders as humble stewards devoted to their company and work to serve their peers, teams, and customers. In a self-organizing team, a servant leader, as Greenleaf defined it, is ideal as the team leader is an enabler, listening to the agile team's needs, removing obstacles, and providing tools or other support to promote high productivity. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

11. Rachel is explaining the concept of emotional intelligence to key stakeholders. Which of the following is the best definition of emotional intelligence?
A. Being aware of and in control of team members' emotions.
B. Being aware and in control of your emotions and aware of your team members' emotions.
C. Being aware of your emotions and aware of team members' emotions.
D. Being aware of team members' emotions.
Answer: B 
Explanation: Having a high emotional intelligence means self-awareness, control over your own emotions, and being attentive to other team members' emotions. A high emotional intelligence allows team members to collaborate effectively. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

12. High emotional intelligence is a desired quality in an agile team member. Which response is the best definition of emotional intelligence?
A. Being aware of team members' emotions.
B. Being aware of your emotions.
C. Being in control of team members' emotions.
D. Being aware and in control of your emotions.
Answer: D 
Explanation: Having a high emotional intelligence means self-awareness, control over your own emotions, and being attentive to other team members' emotions. A high emotional intelligence allows team members to collaborate effectively. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

13. Why is having a high emotional intelligence a desired quality of an agile team member?
A. It encourages motivation.
B. It promotes effective collaboration.
C. It eliminates the likelihood of overworked team members.
D. It ensures having passionate team members.
Answer: B 
Explanation: Having a high emotional intelligence means self-awareness, control over your own emotions, and being attentive to other team members' emotions. A high emotional intelligence allows team members to collaborate effectively. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

14. Rachel, as scrum master, is explaining the need for high emotional intelligence among team members. Why is high emotional intelligence desired?
A. It helps facilitate effective collaboration.
B. It helps instill passion among team members.
C. It helps facilitate team reflection.
D. It eliminates the likelihood of overworked team members.
Answer: A 
Explanation: Having a high emotional intelligence means self-awareness, control over your own emotions, and being attentive to other team members' emotions. A high emotional intelligence allows team members to collaborate effectively. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

15. Henry is explaining the concept of servant leadership to key stakeholders. Which of the following is the best definition of servant leadership?
A. Being attentive to the needs of the scrum master.
B. Being aware of team members' emotions.
C. Being attentive to the needs of your team.
D. Being attentive to the needs of the product owner.
Answer: C 
Explanation: Servant leadership has its roots with an essay written in 1970 by Robert K Greenleaf. Greenleaf defined servant leaders as humble stewards devoted to their company and work to serve their peers, teams, and customers. In a self-organizing team, a servant leader, as Greenleaf defined it, is ideal as the team leader is an enabler, listening to the agile team's needs, removing obstacles, and providing tools or other support to promote high productivity. [Coaching Agile Teams. Lyssa Adkins.] [Soft skills negotiation]

